<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" 
	"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<!-- name space는 BookRepo의 fully qualified name으로 설정한다. -->
<mapper namespace="com.ssafy.ws.model.dao.BookDao">

	<resultMap type="Book" id="bookList">
		<result column="isbn" property="isbn"/>
		<result column="title" property="title"/>
		<result column="author" property="author"/>
		<result column="price" property="price"/>
		<result column="content" property="content"/>
		<result column="img" property="img"/>
	</resultMap>

	<!-- Book 정보를 저장한다. -->
	<insert id="insert" parameterType="Book">
		insert into book
		values(#{isbn}, #{title}, #{author}, #{price}, #{content}, #{img})
	</insert>
	
	<!-- Book 정보를 업데이트 한다 -->
	<update id="update" parameterType="Book">
		update book
		set isbn = #{isbn}, title = #{title}, author = #{author}, price = #{price}, content = #{content}, img=#{img}
		where isbn = #{isbn};
	</update>
	
	<!-- Book 정보를 지운다 -->
	<delete id="delete" parameterType="string">
		delete from book
		where isbn = #{isbn}
	</delete>

	<!-- Book 정보를 조회한다. -->
	<select id="select" parameterType="string" resultType="Book">
		select *
		from book where isbn=#{isbn}
	</select>

	<!-- Book에서 검색한다. -->
	<select id="search" parameterType="SearchCondition" resultType="Book">
		select isbn, title, author, price, content, img
		from book
		<if test="key!='none'">
			where ${key} like '%${word}%'
			<if test="orderBy!='none'">
				order by ${key} ${orderBy}
			</if>
		</if>
	</select>
	
	

	<!-- 검색 조건에 해당하는 데이터 건수를 반환한다. -->
	<select id="getTotalSearchCount" resultType="int" parameterType="SearchCondition">
	<!-- 코드작성 -->
	</select>
</mapper>